{"version":3,"sources":["components/QA/questions.js","components/QA/Questionaire.js","pages/Home.js","components/QA/QuestionsTable.js","pages/Test.js","AppRouter.js","serviceWorker.js","index.js"],"names":["questions","question","type","answer","text","weight","Questionaire","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","submitted","submit","bind","assertThisInitialized","e","preventDefault","setState","react_default","a","createElement","className","onSubmit","map","val","index","key","ans","i","data-weight","Component","Home","QA_Questionaire","round","value","decimals","Number","Math","resultsFromArray","rowIndex","indexArray","outcome","push","length","convertToArray","maxArray","r","diff","split","_","parseInt","Table","possibilities","max","j","console","log","generatePossibilities","rows","th","QuestionsTable","params","highest","lowest","weights","apply","toConsumableArray","min","range","calcParams","groups","temp","groupName","concat","lowScore","highScore","score","getGroups","table","cellPadding","border","style","textAlign","Test","QA_QuestionsTable","AppRouter","BrowserRouter","role","aria-label","Link","to","Route","path","exact","component","Index","Boolean","window","location","hostname","match","ReactDOM","render","src_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.125876ef.chunk.js","sourcesContent":["/**\r\n * Contains all of the questions and answers for the RA questionaire\r\n * along with their associated weights. This file is for just the questions\r\n * answers and weights but is only used for testing of the models\r\n */\r\nconst questions = [\r\n    {\r\n        \"question\": \"What is your reason for inversting?\",\r\n        \"type\": \"choice\",\r\n        \"answer\": [\r\n            { \"text\": \"General Savings\", \"weight\": 4 },\r\n            { \"text\": \"Savings for Retirement\", \"weight\": 3 },\r\n            { \"text\": \"Support Others/College Savings\", \"weight\": 2 },\r\n            { \"text\": \"General Savings/Grow Money\", \"weight\": 1 }\r\n        ]\r\n    },\r\n    {\r\n        \"question\": \"How often will you make withdrawals?\",\r\n        \"type\": \"choice\",\r\n        \"answer\": [\r\n            { \"text\": \"Monthly\", \"weight\": 1 },\r\n            { \"text\": \"Yearly\", \"weight\": 2 },\r\n            { \"text\": \"3-5 Years\", \"weight\": 4 },\r\n            { \"text\": \"5-10 Years\", \"weight\": 6 },\r\n            { \"text\": \"11-15 Years\", \"weight\": 8 }\r\n        ]\r\n    },\r\n    {\r\n        \"question\": \"What is your birthday?\",\r\n        \"type\": \"choice\",\r\n        \"answer\": [\r\n            { \"text\": \"< 35\", \"weight\": 4 },\r\n            { \"text\": \"35 - 50\", \"weight\": 3 },\r\n            { \"text\": \"51 - 65\", \"weight\": 2 },\r\n            { \"text\": \"66+\", \"weight\": 1 }\r\n        ]\r\n    },\r\n    {\r\n        \"question\": \"Which best describes your household?\",\r\n        \"type\": \"choice\",\r\n        \"answer\": [\r\n            { \"text\": \"Single, No Dependents\", \"weight\": 4 },\r\n            { \"text\": \"Single, With Dependents\", \"weight\": 2 },\r\n            { \"text\": \"Married, No Dependents\", \"weight\": 3 },\r\n            { \"text\": \"Married, With Dependents\", \"weight\": 1 }\r\n        ]\r\n    },\r\n    {\r\n        \"question\": \"Annual Pre-tax Income\",\r\n        \"type\": \"choice\",\r\n        \"answer\": [\r\n            { \"text\": \"< 25,000\", \"weight\": 1 },\r\n            { \"text\": \"26,000 - 50,000\", \"weight\": 2 },\r\n            { \"text\": \"50,000 - 100,000\", \"weight\": 3 },\r\n            { \"text\": \"100,000 - 250,000\", \"weight\": 4 },\r\n            { \"text\": \"250,000+\", \"weight\": 5 }\r\n        ]\r\n    },\r\n    {\r\n        \"question\": \"The global stock market is often volatile, if your Investment Account lost 10% in a month, what would you do?\",\r\n        \"type\": \"choice\",\r\n        \"answer\": [\r\n            { \"text\": \"Sell\", \"weight\": 1 },\r\n            { \"text\": \"Hold, breakeven, sell\", \"weight\": 2 },\r\n            { \"text\": \"Hold\", \"weight\": 4 },\r\n            { \"text\": \"Buy more\", \"weight\": 6 }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default questions\r\n","import React, { Component } from 'react'\r\nimport questions from './questions'\r\n\r\nclass Questionaire extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            submitted: false\r\n        }\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    submit(e) {\r\n        if (e) e.preventDefault()\r\n        this.setState({\r\n            submitted: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"Questionaire\" onSubmit={this.submit}>\r\n                {\r\n                    questions.map((val, index) => \r\n                        <div className=\"field\" key={index}>\r\n                            <label className=\"label\">{val.question}</label>\r\n                            <div className=\"control\">\r\n                                <div className=\"select\">\r\n                                    <select>\r\n                                        {\r\n                                            val.answer.map((ans, i) => \r\n                                                <option key={i} data-weight={ans.weight}>{ans.text}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        <button className=\"button is-link\">Submit</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {(this.state.submitted) ? (<span>Form submitted! Still working out this functionality though...</span>) : ''}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questionaire\r\n","// For the initial phases, this will be used as the questionaire page\r\nimport React, { Component } from 'react'\r\nimport Questionaire from '../components/QA/Questionaire'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">The Future of Finance | Home</h1>\r\n          <Questionaire />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport questions from './questions.js'\r\n\r\nconst round = (value, decimals) => {\r\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\r\n}\r\n\r\nconst calcParams = () => {\r\n    let highest = 0;\r\n    let lowest = 0;\r\n    for (let i = 0; i < questions.length; i++) {\r\n        const weights = questions[i].answer.map(_ => _.weight)\r\n        const max = Math.max(...weights)\r\n        const min = Math.min(...weights)\r\n        highest += max\r\n        lowest += min\r\n    }\r\n    const range = highest - lowest\r\n    return { highest, lowest, range }\r\n}\r\n\r\nconst getGroups = (params) => {\r\n    let temp = ``\r\n    let groupCount = 11\r\n    for (let i = 0; i < groupCount; i++) {\r\n        const groupName = `${10*i}/${100-(10*i)}`\r\n        const lowScore = round(params.lowest+((params.range/groupCount*i)), 2)\r\n        const highScore = round(params.lowest+((params.range/groupCount*(i+1))), 2)\r\n        const score = `${lowScore} - ${highScore}`\r\n        temp += `${groupName}: ${score}\\n`\r\n    }\r\n    return temp\r\n}\r\n\r\nconst resultsFromArray = (rowIndex, indexArray) => {\r\n    let outcome = 0\r\n    let a = []\r\n    a.push(<td>{rowIndex}</td>)\r\n    for (let i = 0; i < indexArray.length; i++) {\r\n        var ans = questions[i].answer[indexArray[i]]\r\n        outcome += ans.weight\r\n        a.push(<td>{ans.text}<br/>{ans.weight}</td>)\r\n    }\r\n    a.push(<td><strong>{outcome}</strong></td>)\r\n    const row = <tr>{a}</tr>\r\n    return row\r\n}\r\n\r\nconst convertToArray = (index, maxArray) => {\r\n    let i = index\r\n    let a = ''\r\n    for (let r = maxArray.length - 1; r >= 0; r--) {\r\n        const diff = i % maxArray[r]\r\n        i -= diff\r\n        a = diff + a\r\n    }\r\n    a = a.split('').map(_ => parseInt(_))\r\n    \r\n    return a\r\n}\r\n\r\nconst generatePossibilities = () => {\r\n    let a = []\r\n    const max = questions.map((val, i) => {\r\n        return val.answer.length\r\n    })\r\n    let possible = 1\r\n    // Iterate max length to find max combinations\r\n    for (let i = 0; i < max.length; i++) {\r\n        possible *= max[i]\r\n    }\r\n\r\n    // Iterate the combinations to create every possible outcome\r\n    for (let j = 0; j < 0; j++) {\r\n        a.push(convertToArray(j, max))\r\n    }\r\n\r\n    console.log(a)\r\n    \r\n    return a\r\n}\r\n\r\nconst Table = () => {\r\n    const possibilities = generatePossibilities()\r\n    let rows = []\r\n    const th = questions.map((val) => {\r\n        return <th>{val.question}</th>\r\n    })\r\n    rows.push(<tr className=\"sticky\"><th></th>{th}<th>Outcome</th></tr>)\r\n    for (let i = 0; i < possibilities.length; i++) {\r\n        const indexArray = possibilities[i]\r\n        rows.push(resultsFromArray(i, indexArray))\r\n    }\r\n    \r\n    return rows\r\n}\r\n\r\nclass QuestionsTable extends Component {\r\n    render() {\r\n        const params = calcParams()\r\n        const groups = getGroups(params)\r\n        //const table = results(3)\r\n        const table = Table()\r\n\r\n        return (\r\n            <div className=\"QuestionsTable\">\r\n                <pre>Highest: {params.highest}, Lowest: {params.lowest}, Range: {params.range}</pre>\r\n                <pre>{groups}</pre>\r\n                <table cellPadding=\"5\" border=\"1\" style={{textAlign: \"center\"}}>\r\n                    <tbody>{table}</tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// TODO\r\n// Refactor the Table creation using 'data'\r\n// So basically form the data into json and then create the table\r\n// Groups could be structured as:\r\n// {\r\n//   name: \"0/100\",\r\n//   low: 6,\r\n//   high: 8.27\r\n// }\r\n// That way I can actually check easily what groups the outcome scores correspond to\r\n// FIX::::\r\n// Currently doesn't actually output all possiblities....\r\n// Need to do a recursive function to find all possibilities rather than looping\r\n// At least probably need to make convertToArray recursive...\r\n//\r\n// function a (possibilityIndex, depth) {\r\n//   if (possibilityIndex > maxArray[depth]) {\r\n//      return a (possibilityIndex - something, depth + 1)\r\n//   } else {\r\n//      return possibilityIndex // Or at least push to array\r\n//   }\r\n//\r\n\r\nexport default QuestionsTable\r\n","import React, { Component } from 'react'\r\nimport QuestionsTable from '../components/QA/QuestionsTable'\r\n\r\nclass Test extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">The Future of Finance | Test</h1>\r\n          <QuestionsTable />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Index from './pages/Home'\r\nimport Test from './pages/Test'\r\n\r\nconst AppRouter = () => (\r\n  <Router>\r\n    <div>\r\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/test/\">Test</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <Route path=\"/\" exact component={Index} />\r\n      <Route path=\"/test/\" component={Test} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma'\nimport './index.css';\nimport AppRouter from './AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}